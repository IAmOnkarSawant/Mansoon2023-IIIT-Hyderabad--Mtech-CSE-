# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Qv0f9CoMY8bzyycNRwYWvEtDv54c40Ee

#Q1
"""

import pandas as pd

df = pd.read_csv('stock_data.csv')
df = df.drop(columns=df.columns[-6:])
df.to_csv('Q1_1.txt', index=False)

# df = pd.read_csv('stock_data.csv')
df = df[df['% Chng'].apply(lambda x: x >= -3)]
df.to_csv('Q1_2.txt', index=False)

def calculate_average(df, numeric_columns):
  return df[numeric_columns].apply(lambda x: x.str.replace(',', '')).astype(float).apply(lambda x: x.mean())

numeric_columns = ['Open', 'High', 'Low']
df_average = calculate_average(df.copy(), numeric_columns)
df_average.to_csv('Q1_3.txt', index=False)

def startWith(char):
    char = char.upper()
    df['Symbol'] = df['Symbol'].str.upper()
    matching_stocks = df[df['Symbol'].str.startswith(char, na=False)]

    selected_columns = ['Symbol', 'LTP']
    table = PrettyTable(selected_columns)

    if not matching_stocks.empty:
        table.field_names = selected_columns
        for _, row in matching_stocks.iterrows():
            table.add_row([row[column] for column in selected_columns])
        print(table)
    else:
        table.field_names = selected_columns
        print(table)

    with open('Q1_4.txt', 'w') as f:
        f.write(table.get_string())

user_input = input("")

startWith(user_input)

import random

# Define the ranges for the columns
salary_range = (10000.00, 50000.0)
age_range = (21, 55)
class_list = ['A', 'B', 'C', 'D', 'E', 'F']
status_list = [True, False]

# Generate the dataset
dataset = []
for i in range(10):
    salary = random.uniform(*salary_range)
    age = random.randint(*age_range)
    class_ = random.choice(class_list)
    status = random.choice(status_list)
    row = [salary, age, class_, status]
    dataset.append(row)

# Write the dataset to a file
with open('Q1_5.txt', 'w') as f:
    f.write('Salary,Age,Class,Status\n')
    for row in dataset:
        f.write(','.join([str(x) for x in row]) + '\n')















